{"version":3,"file":"PanelsView-Bnnsxhnr.js","sources":["../../ui/node_modules/@tabler/icons-vue/dist/esm/icons/IconArrowLeft.mjs","../../ui/node_modules/@tabler/icons-vue/dist/esm/icons/IconEye.mjs","../../ui/node_modules/@tabler/icons-vue/dist/esm/icons/IconSearchOff.mjs","../../ui/node_modules/@tabler/icons-vue/dist/esm/icons/IconSearch.mjs","../../ui/src/services/PanelService.js","../../ui/src/components/form/FormSelect.vue","../../ui/src/components/panels/PanelEdit.vue","../../ui/src/components/panels/PanelView.vue","../../ui/src/components/panels/PanelsOverview.vue","../../ui/src/views/PanelsView.vue"],"sourcesContent":["/**\n * @license @tabler/icons-vue v3.31.0 - MIT\n *\n * This source code is licensed under the MIT license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createVueComponent from '../createVueComponent.mjs';\n\nvar IconArrowLeft = createVueComponent(\"outline\", \"arrow-left\", \"IconArrowLeft\", [[\"path\", { \"d\": \"M5 12l14 0\", \"key\": \"svg-0\" }], [\"path\", { \"d\": \"M5 12l6 6\", \"key\": \"svg-1\" }], [\"path\", { \"d\": \"M5 12l6 -6\", \"key\": \"svg-2\" }]]);\n\nexport { IconArrowLeft as default };\n//# sourceMappingURL=IconArrowLeft.mjs.map\n","/**\n * @license @tabler/icons-vue v3.31.0 - MIT\n *\n * This source code is licensed under the MIT license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createVueComponent from '../createVueComponent.mjs';\n\nvar IconEye = createVueComponent(\"outline\", \"eye\", \"IconEye\", [[\"path\", { \"d\": \"M10 12a2 2 0 1 0 4 0a2 2 0 0 0 -4 0\", \"key\": \"svg-0\" }], [\"path\", { \"d\": \"M21 12c-2.4 4 -5.4 6 -9 6c-3.6 0 -6.6 -2 -9 -6c2.4 -4 5.4 -6 9 -6c3.6 0 6.6 2 9 6\", \"key\": \"svg-1\" }]]);\n\nexport { IconEye as default };\n//# sourceMappingURL=IconEye.mjs.map\n","/**\n * @license @tabler/icons-vue v3.31.0 - MIT\n *\n * This source code is licensed under the MIT license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createVueComponent from '../createVueComponent.mjs';\n\nvar IconSearchOff = createVueComponent(\"outline\", \"search-off\", \"IconSearchOff\", [[\"path\", { \"d\": \"M5.039 5.062a7 7 0 0 0 9.91 9.89m1.584 -2.434a7 7 0 0 0 -9.038 -9.057\", \"key\": \"svg-0\" }], [\"path\", { \"d\": \"M3 3l18 18\", \"key\": \"svg-1\" }]]);\n\nexport { IconSearchOff as default };\n//# sourceMappingURL=IconSearchOff.mjs.map\n","/**\n * @license @tabler/icons-vue v3.31.0 - MIT\n *\n * This source code is licensed under the MIT license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createVueComponent from '../createVueComponent.mjs';\n\nvar IconSearch = createVueComponent(\"outline\", \"search\", \"IconSearch\", [[\"path\", { \"d\": \"M10 10m-7 0a7 7 0 1 0 14 0a7 7 0 1 0 -14 0\", \"key\": \"svg-0\" }], [\"path\", { \"d\": \"M21 21l-6 -6\", \"key\": \"svg-1\" }]]);\n\nexport { IconSearch as default };\n//# sourceMappingURL=IconSearch.mjs.map\n","/*\nMacrame is a program that enables the user to create keyboard macros and button panels. \nThe macros are saved as simple JSON files and can be linked to the button panels. The panels can \nbe created with HTML and CSS.\n\nCopyright (C) 2025 Jesse Malotaux\n\nThis program is free software: you can redistribute it and/or modify \nit under the terms of the GNU General Public License as published by \nthe Free Software Foundation, either version 3 of the License, or \n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful, \nbut WITHOUT ANY WARRANTY; without even the implied warranty of \nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the \nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License \nalong with this program. If not, see <https://www.gnu.org/licenses/>.\n*/\n\nexport const SetPanelStyle = (styleStr) => {\n  const styleEl = document.createElement('style')\n  styleEl.setAttribute('custom_panel_style', true)\n  styleEl.innerHTML = styleStr\n  document.head.appendChild(styleEl)\n}\n\nexport const RemovePanelStyle = () => {\n  const styleEl = document.querySelector('style[custom_panel_style]')\n  if (styleEl) {\n    styleEl.remove()\n  }\n}\n\nexport const StripPanelHTML = (html, aspectRatio) => {\n  const parser = new DOMParser()\n  const doc = parser.parseFromString(html, 'text/html')\n  let scripts = []\n\n  if (doc.querySelectorAll('script').length > 0) {\n    const stripped = StripPanelScripts(doc)\n    doc.body = stripped.body\n    scripts = stripped.scripts\n  }\n\n  const body = doc.body\n  const bodyContents = body.innerHTML\n\n  const panelBody = document.createElement('div')\n  panelBody.id = 'panel-html__body'\n  panelBody.style = `aspect-ratio: ${aspectRatio}`\n  panelBody.innerHTML = bodyContents\n\n  if (scripts.length > 0) {\n    SetPanelScripts(scripts)\n  }\n\n  return panelBody.outerHTML\n}\n\nexport const StripPanelScripts = (doc) => {\n  const scriptEls = doc.querySelectorAll('script')\n  const scripts = []\n\n  scriptEls.forEach((script) => {\n    if (script.getAttribute('no-compile') != '') scripts.push(script.innerHTML)\n    script.remove()\n  })\n\n  return { body: doc.body, scripts }\n}\n\nexport const SetPanelScripts = (scripts) => {\n  scripts.forEach((script) => {\n    const scriptEl = document.createElement('script')\n    scriptEl.setAttribute('custom_panel_script', true)\n    scriptEl.innerHTML = script\n    document.body.appendChild(scriptEl)\n  })\n}\n\nexport const RemovePanelScripts = () => {\n  const scripts = document.querySelectorAll('script[custom_panel_script]')\n  scripts.forEach((script) => {\n    script.remove()\n  })\n}\n\nexport const PanelButtonListeners = (panelEl, callback) => {\n  panelEl.querySelectorAll('[mcrm__button]').forEach((button) => {\n    button.addEventListener('click', () => {\n      callback(button)\n    })\n  })\n}\n\nexport const PanelDialogListeners = (panelEl) => {\n  panelEl.querySelectorAll('[mcrm__dialog-trigger]').forEach((dialogTrigger) => {\n    const dialogEl = document.querySelector(dialogTrigger.getAttribute('dialog-trigger'))\n\n    if (dialogEl) {\n      dialogTrigger.addEventListener('click', () => {\n        dialogEl.show()\n      })\n    }\n  })\n\n  document.querySelectorAll('dialog, dialog .dialog__close').forEach((dialogClose) => {\n    dialogClose.addEventListener('click', (e) => {\n      if (\n        e.target.classList.contains('dialog__close') ||\n        e.target.closest('.dialog__close') ||\n        e.target.tagName == 'DIALOG'\n      ) {\n        dialogClose.closest('dialog').close()\n      }\n    })\n  })\n}\n","<!--\nMacrame is a program that enables the user to create keyboard macros and button panels. \nThe macros are saved as simple JSON files and can be linked to the button panels. The panels can \nbe created with HTML and CSS.\n\nCopyright (C) 2025 Jesse Malotaux\n\nThis program is free software: you can redistribute it and/or modify \nit under the terms of the GNU General Public License as published by \nthe Free Software Foundation, either version 3 of the License, or \n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful, \nbut WITHOUT ANY WARRANTY; without even the implied warranty of \nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the \nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License \nalong with this program. If not, see <https://www.gnu.org/licenses/>.\n-->\n\n<template>\n  <div class=\"input-group form-select\">\n    <label v-if=\"label\">\n      {{ label }}\n    </label>\n    <div class=\"select__container\">\n      <template v-if=\"search\">\n        <div class=\"select__search-bar\">\n          <input\n            type=\"search\"\n            ref=\"selectSearch\"\n            :list=\"`${name}-search__options`\"\n            v-model=\"select.search\"\n            @change=\"selectSearchValue($event)\"\n            :disabled=\"!select.searchActive\"\n            autocomplete=\"on\"\n          />\n          <datalist :id=\"`${name}-search__options`\">\n            <option v-for=\"option in select.options\" :key=\"option.value\" :value=\"option.value\">\n              {{ option.label }}\n            </option>\n          </datalist>\n          <ButtonComp v-if=\"!select.searchActive\" variant=\"ghost\" size=\"sm\" @click=\"initSearch\">\n            <IconSearch />\n          </ButtonComp>\n          <ButtonComp v-else variant=\"ghost\" size=\"sm\" @click=\"resetSearch\">\n            <IconSearchOff />\n          </ButtonComp>\n        </div>\n      </template>\n      <select :name=\"name\" ref=\"selectEl\" v-model=\"select.value\" @change=\"changeSelect($event)\">\n        <option value=\"\" disabled>- Select {{ label.toLocaleLowerCase() }} -</option>\n        <option v-for=\"option in select.options\" :key=\"option.value\" :value=\"option.value\">\n          {{ option.label }}\n        </option>\n      </select>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { IconSearch, IconSearchOff } from '@tabler/icons-vue'\nimport { onMounted, onUpdated, reactive, ref } from 'vue'\nimport ButtonComp from '../base/ButtonComp.vue'\n\nconst emit = defineEmits(['change'])\n\nconst props = defineProps({\n  label: String,\n  name: String,\n  options: [Array, Object],\n  search: Boolean,\n  value: String,\n})\n\nconst select = reactive({\n  options: [],\n  search: '',\n  searchActive: false,\n  changed: false,\n  value: '',\n})\n\nconst selectEl = ref(null)\nconst selectSearch = ref(null)\n\nonMounted(() => {\n  setValue()\n\n  if (typeof props.options == 'object') select.options = Object.values(props.options)\n})\n\nonUpdated(() => {\n  setValue()\n})\n\nconst setValue = () => {\n  if ((select.value == '' && props.value) || (!select.changed && props.value != select.value)) {\n    select.value = props.value\n  }\n\n  select.changed = false\n}\n\nconst initSearch = () => {\n  select.searchActive = true\n  select.search = ''\n  selectEl.value.classList = 'search__is-active'\n  setTimeout(() => {\n    selectSearch.value.focus()\n  }, 50)\n}\n\nconst resetSearch = () => {\n  select.search = ''\n  select.searchActive = false\n  selectEl.value.classList = ''\n}\n\nconst selectSearchValue = (event) => {\n  changeSelect(event)\n  resetSearch()\n}\n\nconst changeSelect = (event) => {\n  select.changed = true\n  select.value = event.target.value\n\n  emit('change', select.value)\n}\n</script>\n\n<style scoped>\n@reference \"@/assets/main.css\";\n\n.select__container {\n  @apply relative\n  h-8;\n\n  select,\n  .select__search-bar {\n    @apply absolute top-0 h-8;\n  }\n}\n.select__search-bar {\n  @apply right-0 \n  grid\n  grid-cols-[1fr_auto]\n  items-center\n  w-full\n  pr-4\n  z-10\n  pointer-events-none;\n\n  button {\n    @apply pointer-events-auto;\n  }\n\n  input {\n    @apply border-0 bg-transparent pointer-events-auto px-2 py-0 focus:outline-0;\n\n    &[disabled] {\n      @apply pointer-events-none;\n    }\n  }\n  datalist {\n    @apply absolute\n    top-full left-0;\n  }\n}\n\nselect.search__is-active {\n  @apply text-transparent;\n}\n</style>\n","<!--\nMacrame is a program that enables the user to create keyboard macros and button panels. \nThe macros are saved as simple JSON files and can be linked to the button panels. The panels can \nbe created with HTML and CSS.\n\nCopyright (C) 2025 Jesse Malotaux\n\nThis program is free software: you can redistribute it and/or modify \nit under the terms of the GNU General Public License as published by \nthe Free Software Foundation, either version 3 of the License, or \n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful, \nbut WITHOUT ANY WARRANTY; without even the implied warranty of \nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the \nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License \nalong with this program. If not, see <https://www.gnu.org/licenses/>.\n-->\n\n<template>\n  <div id=\"panel-edit\" class=\"mcrm-block block__dark !p-0 !gap-0\" v-if=\"editPanel\">\n    <div class=\"panel-preview\">\n      <div class=\"panel-preview__content\" ref=\"panelPreview\" v-html=\"editPanel.html\"></div>\n    </div>\n    <div class=\"panel-settings\">\n      <AccordionComp title=\"Panel info\" ref=\"infoAccordion\">\n        <div class=\"grid grid-cols-[auto_1fr] gap-2 p-4\">\n          <span>Name:</span><strong class=\"text-right\">{{ editPanel.name }}</strong>\n\n          <span>Aspect ratio:</span><strong class=\"text-right\">{{ editPanel.aspectRatio }}</strong>\n\n          <template v-if=\"editPanel.macros\">\n            <span>Linked Macros:</span>\n            <strong class=\"text-right\">{{ Object.keys(editPanel.macros).length }}</strong>\n          </template>\n        </div>\n      </AccordionComp>\n      <div>\n        <AccordionComp\n          v-if=\"editButton.id\"\n          title=\"Button\"\n          ref=\"buttonAccordion\"\n          :open=\"editButton.id != ''\"\n        >\n          <div class=\"grid gap-4 p-4\">\n            <div class=\"grid grid-cols-[auto_1fr] gap-2\">\n              <span>Button ID:</span>\n              <strong class=\"text-right\">{{ editButton.id }}</strong>\n            </div>\n            <div class=\"grid\">\n              <FormSelect\n                name=\"button_macro\"\n                label=\"Button macro\"\n                :search=\"true\"\n                :options=\"macroList\"\n                :value=\"editButton.macro\"\n                @change=\"checkNewMacro(editButton.id, $event)\"\n              />\n              <div class=\"grid grid-cols-2 mt-4\">\n                <ButtonComp\n                  v-if=\"editButton.macro != ''\"\n                  class=\"col-start-1 w-fit\"\n                  size=\"sm\"\n                  variant=\"danger\"\n                  @click=\"unlinkMacro(editButton.id)\"\n                  ref=\"unlinkButton\"\n                >\n                  <IconTrash /> Unlink\n                </ButtonComp>\n                <ButtonComp\n                  v-if=\"editButton.changed\"\n                  class=\"col-start-2 w-fit justify-self-end\"\n                  size=\"sm\"\n                  variant=\"primary\"\n                  @click=\"linkMacro(editButton.id)\"\n                  ref=\"linkButton\"\n                >\n                  <IconLink /> Link\n                </ButtonComp>\n              </div>\n            </div>\n          </div>\n        </AccordionComp>\n      </div>\n      <footer class=\"flex items-end justify-end h-full p-4\">\n        <ButtonComp v-if=\"panelMacros.changed\" variant=\"success\" @click=\"savePanelChanges()\">\n          <IconDeviceFloppy /> Save changes\n        </ButtonComp>\n      </footer>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { CheckMacroListChange, GetMacroList } from '@/services/MacroService'\nimport {\n  PanelButtonListeners,\n  PanelDialogListeners,\n  RemovePanelStyle,\n  SetPanelStyle,\n  StripPanelHTML,\n} from '@/services/PanelService'\nimport { usePanelStore } from '@/stores/panel'\nimport { onMounted, onUnmounted, reactive, ref } from 'vue'\nimport AccordionComp from '../base/AccordionComp.vue'\nimport FormSelect from '../form/FormSelect.vue'\nimport ButtonComp from '../base/ButtonComp.vue'\nimport { IconDeviceFloppy, IconLink, IconTrash } from '@tabler/icons-vue'\nimport axios from 'axios'\nimport { appUrl } from '@/services/ApiService'\n\nconst props = defineProps({\n  dirname: String,\n})\n\nconst panel = usePanelStore()\n\nconst panelPreview = ref(false)\nconst editPanel = ref({})\nconst panelMacros = reactive({\n  old: {},\n  changed: false,\n})\n\nconst macroList = ref({})\n\nconst infoAccordion = ref(false)\nconst buttonAccordion = ref(false)\n\nconst unlinkButton = ref(null)\nconst linkButton = ref(null)\n\nconst editButton = reactive({\n  id: '',\n  macro: '',\n  newMacro: '',\n  changed: false,\n})\n\nonMounted(async () => {\n  const currentPanel = await panel.get(props.dirname)\n  editPanel.value = currentPanel\n  editPanel.value.dir = props.dirname\n  editPanel.value.html = StripPanelHTML(editPanel.value.html, editPanel.value.aspectRatio)\n\n  panelMacros.old = JSON.stringify(currentPanel.macros)\n\n  infoAccordion.value.toggleAccordion(true)\n\n  const macros = await GetMacroList()\n  macroList.value = Object.assign(\n    {},\n    ...Object.keys(macros).map((key) => ({\n      [key]: { value: macros[key].macroname, label: macros[key].name },\n    })),\n  )\n\n  SetPanelStyle(editPanel.value.style)\n\n  EditButtonListeners()\n})\n\nonUnmounted(() => {\n  RemovePanelStyle()\n})\n\nfunction EditButtonListeners() {\n  const callback = (button) => {\n    infoAccordion.value.toggleAccordion(false)\n    setEditButton(button.id)\n  }\n\n  PanelButtonListeners(panelPreview.value, callback)\n  PanelDialogListeners(panelPreview.value)\n}\n\nfunction setEditButton(id) {\n  editButton.id = id\n  editButton.macro = editPanel.value.macros[id] ? editPanel.value.macros[id] : ''\n}\n\nfunction checkNewMacro(id, macro) {\n  editButton.changed = editPanel.value.macros[id] != macro\n  editButton.newMacro = macro\n}\n\nfunction linkMacro(id) {\n  editPanel.value.macros[id] = editButton.newMacro\n  editButton.macro = editButton.newMacro\n  editButton.newMacro = ''\n\n  panelMacros.changed = CheckMacroListChange(panelMacros.old, editPanel.value.macros)\n}\n\nfunction unlinkMacro(id) {\n  delete editPanel.value.macros[id]\n  buttonAccordion.value.toggleAccordion(false)\n  panelMacros.changed = CheckMacroListChange(panelMacros.old, editPanel.value.macros)\n}\n\nfunction savePanelChanges() {\n  const panelData = {\n    dir: editPanel.value.dir,\n    name: editPanel.value.name,\n    description: editPanel.value.description,\n    aspectRatio: editPanel.value.aspectRatio,\n    macros: editPanel.value.macros,\n  }\n\n  axios.post(appUrl() + '/panel/save/json', panelData)\n}\n</script>\n\n<style>\n@reference \"@/assets/main.css\";\n\n[mcrm__button] {\n  @apply cursor-pointer;\n}\n\n#panel-edit {\n  @apply grid\n  grid-cols-[1fr_30ch]\n  size-full\n  overflow-hidden;\n\n  .panel-preview {\n    @apply border-r\n    border-slate-700;\n\n    .panel-preview__content {\n      @apply relative\n      grid\n      justify-center\n      size-full\n      p-8;\n\n      #panel-html__body {\n        @apply size-full\n        max-w-full max-h-full;\n      }\n    }\n  }\n\n  .panel-settings {\n    @apply grid\n    grid-rows-[auto_auto_1fr]\n    bg-black/30;\n  }\n}\n</style>\n","<!--\nMacrame is a program that enables the user to create keyboard macros and button panels. \nThe macros are saved as simple JSON files and can be linked to the button panels. The panels can \nbe created with HTML and CSS.\n\nCopyright (C) 2025 Jesse Malotaux\n\nThis program is free software: you can redistribute it and/or modify \nit under the terms of the GNU General Public License as published by \nthe Free Software Foundation, either version 3 of the License, or \n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful, \nbut WITHOUT ANY WARRANTY; without even the implied warranty of \nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the \nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License \nalong with this program. If not, see <https://www.gnu.org/licenses/>.\n-->\n\n<template>\n  <div id=\"panel-view\">\n    <div class=\"panel-preview__content\" ref=\"panelView\" v-html=\"viewPanel.html\"></div>\n  </div>\n</template>\n\n<script setup>\nimport { RunMacro } from '@/services/MacroService'\nimport {\n  PanelButtonListeners,\n  PanelDialogListeners,\n  RemovePanelScripts,\n  RemovePanelStyle,\n  SetPanelStyle,\n  StripPanelHTML,\n} from '@/services/PanelService'\nimport { usePanelStore } from '@/stores/panel'\nimport { onMounted, onUnmounted, ref } from 'vue'\n\nconst panel = usePanelStore()\n\nconst props = defineProps({\n  dirname: String,\n})\n\nconst panelView = ref(null)\n\nconst viewPanel = ref({})\n\nonMounted(async () => {\n  const currentPanel = await panel.get(props.dirname)\n  viewPanel.value = currentPanel\n\n  viewPanel.value.html = StripPanelHTML(viewPanel.value.html, viewPanel.value.aspectRatio)\n  SetPanelStyle(viewPanel.value.style)\n\n  setTimeout(() => {\n    viewPanelListeners()\n\n    if (typeof window.onPanelLoaded === 'function') {\n      window.onPanelLoaded()\n    }\n  }, 50)\n})\n\nonUnmounted(() => {\n  RemovePanelStyle()\n  RemovePanelScripts()\n})\n\nconst viewPanelListeners = () => {\n  const callback = (button) => {\n    RunMacro(viewPanel.value.macros[button.id])\n  }\n\n  PanelButtonListeners(panelView.value, callback)\n  PanelDialogListeners(panelView.value)\n}\n</script>\n\n<style scoped>\n@reference \"@/assets/main.css\";\n\n#panel-view {\n  @apply fixed\n  inset-0\n  size-full\n  bg-black;\n\n  .panel-preview__content {\n    @apply relative\n      grid\n      justify-center\n      size-full;\n\n    #panel-html__body {\n      @apply size-full\n        max-w-full max-h-full;\n    }\n  }\n}\n</style>\n","<!--\nMacrame is a program that enables the user to create keyboard macros and button panels. \nThe macros are saved as simple JSON files and can be linked to the button panels. The panels can \nbe created with HTML and CSS.\n\nCopyright (C) 2025 Jesse Malotaux\n\nThis program is free software: you can redistribute it and/or modify \nit under the terms of the GNU General Public License as published by \nthe Free Software Foundation, either version 3 of the License, or \n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful, \nbut WITHOUT ANY WARRANTY; without even the implied warranty of \nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the \nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License \nalong with this program. If not, see <https://www.gnu.org/licenses/>.\n-->\n\n<template>\n  <div id=\"panels-overview\">\n    <AlertComp v-if=\"Object.keys(panels.list).length == 0\" variant=\"info\">\n      No panels found\n    </AlertComp>\n    <div class=\"panel-list\">\n      <div class=\"panel-item mcrm-block block__dark\" v-for=\"(panel, i) in panels.list\" :key=\"i\">\n        <div class=\"panel-item__content\" @click=\"panelItemClick(panel.dir)\">\n          <div class=\"thumb\">\n            <img v-if=\"panel.thumb\" :src=\"`data:image/jpeg;base64,${panel.thumb}`\" alt=\"\" />\n            <IconLayoutGrid v-else />\n          </div>\n          <h4>{{ panel.name }}</h4>\n          <div class=\"description\" v-if=\"isLocal()\">\n            <div class=\"content\">\n              <strong class=\"block mb-1 text-slate-400\">{{ panel.name }}</strong>\n              <hr class=\"mb-2 border-slate-600\" />\n              <p v-if=\"panel.description != 'null'\" class=\"text-slate-200\">\n                {{ panel.description }}\n              </p>\n            </div>\n            <footer>\n              <ButtonComp variant=\"subtle\" size=\"sm\" :href=\"`/panel/view/${panel.dir}`\">\n                <IconEye /> Preview\n              </ButtonComp>\n              <ButtonComp variant=\"primary\" size=\"sm\" :href=\"`/panel/edit/${panel.dir}`\">\n                <IconPencil /> Edit\n              </ButtonComp>\n            </footer>\n          </div>\n        </div>\n        <template v-if=\"!isLocal()\"> </template>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { usePanelStore } from '@/stores/panel'\nimport { onMounted, reactive } from 'vue'\nimport AlertComp from '../base/AlertComp.vue'\nimport { IconEye, IconLayoutGrid, IconPencil } from '@tabler/icons-vue'\nimport ButtonComp from '../base/ButtonComp.vue'\nimport { isLocal } from '@/services/ApiService'\nimport { useRouter } from 'vue-router'\n\nconst panel = usePanelStore()\n\nconst panels = reactive({\n  list: {},\n})\n\nconst router = useRouter()\n\nonMounted(async () => {\n  const panelList = await panel.getList()\n\n  panels.list = panelList\n})\n\nfunction panelItemClick(dir) {\n  if (isLocal()) return\n\n  router.push(`/panel/view/${dir}`)\n}\n</script>\n\n<style scoped>\n@reference \"@/assets/main.css\";\n\n.panel-list {\n  @apply grid\n  grid-cols-2\n  md:grid-cols-4\n  lg:grid-cols-6\n  gap-4\n  w-full h-fit;\n}\n\n.panel-item {\n  @apply p-px \n  overflow-hidden;\n\n  .thumb {\n    @apply flex \n    justify-center\n    items-center\n    w-full\n    aspect-[4/3];\n\n    img {\n      @apply size-full\n      object-cover;\n    }\n\n    &:not(:has(img)) {\n      @apply bg-sky-950;\n    }\n\n    svg {\n      @apply size-12;\n    }\n  }\n\n  h4 {\n    @apply px-4 py-2\n    h-12\n    truncate;\n  }\n\n  &:hover .description {\n    @apply opacity-100;\n  }\n\n  .description {\n    @apply absolute\n    inset-0\n    size-full\n    pt-2\n    pr-1\n    pb-13\n    bg-slate-900/60\n    backdrop-blur-md\n    text-slate-100\n    opacity-0\n    transition-opacity\n    cursor-default\n    z-10;\n\n    .content {\n      @apply h-full\n      p-4\n      pt-2\n      overflow-y-auto;\n    }\n\n    footer {\n      @apply absolute\n      bottom-0 left-0\n      w-full\n      h-12\n      grid\n      grid-cols-2\n      bg-slate-900\n      border-t\n      border-slate-600;\n\n      .btn {\n        @apply size-full\n        rounded-none\n        justify-center\n        border-0;\n\n        &:last-child {\n          @apply border-l\n          border-slate-600;\n        }\n      }\n    }\n  }\n}\n</style>\n","<!--\nMacrame is a program that enables the user to create keyboard macros and button panels. \nThe macros are saved as simple JSON files and can be linked to the button panels. The panels can \nbe created with HTML and CSS.\n\nCopyright (C) 2025 Jesse Malotaux\n\nThis program is free software: you can redistribute it and/or modify \nit under the terms of the GNU General Public License as published by \nthe Free Software Foundation, either version 3 of the License, or \n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful, \nbut WITHOUT ANY WARRANTY; without even the implied warranty of \nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the \nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License \nalong with this program. If not, see <https://www.gnu.org/licenses/>.\n-->\n\n<template>\n  <div id=\"panels\" class=\"panel\">\n    <h1 class=\"flex items-end justify-between !w-full panel__title\">\n      <div>Panels</div>\n      <ButtonComp\n        v-if=\"panel.function != 'overview'\"\n        variant=\"subtle\"\n        size=\"sm\"\n        @click=\"router.push('/panels')\"\n      >\n        <IconArrowLeft /> Overview\n      </ButtonComp>\n    </h1>\n    <div :class=\"`panel__content !p-0 !pt-4 ${panel.function == 'overview' ?? '!pr-4'}`\">\n      <PanelsOverview v-if=\"panel.function == 'overview'\" />\n      <PanelEdit v-if=\"panel.function == 'edit'\" :dirname=\"panel.dirname\" />\n      <PanelView v-if=\"panel.function == 'preview'\" :dirname=\"panel.dirname\" />\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport ButtonComp from '@/components/base/ButtonComp.vue'\nimport PanelEdit from '@/components/panels/PanelEdit.vue'\nimport PanelView from '@/components/panels/PanelView.vue'\nimport PanelsOverview from '@/components/panels/PanelsOverview.vue'\nimport { isLocal } from '@/services/ApiService'\nimport { IconArrowLeft } from '@tabler/icons-vue'\nimport { onMounted, onUpdated, reactive } from 'vue'\nimport { useRoute, useRouter } from 'vue-router'\n\nconst route = useRoute()\nconst router = useRouter()\n\nconst panel = reactive({\n  function: '',\n  dirname: '',\n})\n\nonMounted(() => {\n  setVarsByRoute()\n})\n\nonUpdated(() => {\n  setVarsByRoute()\n})\n\nconst setVarsByRoute = () => {\n  if (route.name.includes('panel-')) {\n    panel.function = route.name == 'panel-edit' ? 'edit' : 'preview'\n  } else {\n    panel.function = 'overview'\n  }\n\n  panel.dirname = route.params.dirname\n}\n</script>\n\n<style scoped>\n@reference \"@/assets/main.css\";\n</style>\n"],"names":["IconArrowLeft","createVueComponent","IconEye","IconSearchOff","IconSearch","SetPanelStyle","styleStr","styleEl","RemovePanelStyle","StripPanelHTML","html","aspectRatio","doc","scripts","stripped","StripPanelScripts","bodyContents","panelBody","SetPanelScripts","scriptEls","script","scriptEl","RemovePanelScripts","PanelButtonListeners","panelEl","callback","button","PanelDialogListeners","dialogTrigger","dialogEl","dialogClose","e","emit","__emit","props","__props","select","reactive","selectEl","ref","selectSearch","onMounted","setValue","onUpdated","initSearch","resetSearch","selectSearchValue","event","changeSelect","panel","usePanelStore","panelPreview","editPanel","panelMacros","macroList","infoAccordion","buttonAccordion","unlinkButton","linkButton","editButton","currentPanel","macros","GetMacroList","key","EditButtonListeners","onUnmounted","setEditButton","id","checkNewMacro","macro","linkMacro","CheckMacroListChange","unlinkMacro","savePanelChanges","panelData","axios","appUrl","panelView","viewPanel","viewPanelListeners","RunMacro","panels","router","useRouter","panelList","panelItemClick","dir","isLocal","route","useRoute","setVarsByRoute"],"mappings":"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","x_google_ignoreList":[0,1,2,3]}